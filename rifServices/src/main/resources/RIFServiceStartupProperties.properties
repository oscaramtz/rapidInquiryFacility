#================================================================================
#The Rapid Inquiry Facility (RIF) is an automated tool devised by SAHSU
#that rapidly addresses epidemiological and public health questions using
#routinely collected health and population data and generates standardised
#rates and relative risks for any given health outcome, for specified age
#and year ranges, for any given geographical area.
#
#Copyright 2014 Imperial College London, developed by the Small Area
#Health Statistics Unit. The work of the Small Area Health Statistics Unit
#is funded by the Public Health England as part of the MRC-PHE Centre for
#Environment and Health. Funding for this project has also been received
#from the United States Centers for Disease Control and Prevention.
#
#This file is part of the Rapid Inquiry Facility (RIF) project.
#RIF is free software: you can redistribute it and/or modify
#it under the terms of the GNU Lesser General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#RIF is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#GNU Lesser General Public License for more details.
#
#You should have received a copy of the GNU Lesser General Public License
#along with RIF. If not, see <http://www.gnu.org/licenses/>; or write
#to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#Boston, MA 02110-1301 USA
#
#author: Kevin Garwood
#================================================================================

#POSTGRES
database.driverClassName=org.postgresql.Driver
database.jdbcDriverPrefix=jdbc:postgresql
database.host=localhost
database.port=5432
database.databaseName=sahsuland
database.databaseType=postgresql

#SQL SERVER
#database.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#database.jdbcDriverPrefix=jdbc:sqlserver
#database.host=localhost\\SQLEXPRESS
#database.port=1433
#database.databaseName=sahsuland
#database.databaseType=sqlServer

database.isCaseSensitive=true

#These are properties that relate to JDBC's handling of server certificates
database.isSSLSupported=false

#If isSSLSupported is set to true, then you need to uncomment the following properties
#as well so that SSL is properly supported.

#database.isSSLSupported=true
#Debug is useful if you want to see if there are problems using the driver
#database.useSSLDebug=false
#sslTrustStore is a file where Java will find registered certificates.  It is
#typically in jre/lib/security directory and the default store is called 'cacerts'.
#Here we're using a local store that will only contain the certificate of the postgreSQL
#server we're using to support the RIF.
#database.sslTrustStore=C://Program Files//Java//jdk1.8.0_92//jre//lib//security//mystore
#This is the default password for the default certification store
#database.sslTrustStorePassword=changeIt

extractDirectory=c:\\rifDemo
#
# Set the ODBC data source for SQL Server only. Postgres uses JDBC
#odbcDataSourceName=SQLServer13

#
# Tile generator: set if you need automatic tile generation for geolevels with more than 5000 areas
# (see: disableMouseClicksAt in frontEndParameters.json5). The user needs to logon to the RIF for the generator to run
#
# tileGeneratorUsername=

extraDirectoryForExtractFiles=C:\\rifDemo\\generalDataExtractPolicies

# Enable log4j debug
log4j2.debug=true

#
# Network location of the taxonomy services server.
# Use when:
#
# * The taxonomy services is not running on the same server as rifServices
# * HTTPS is used
#
# You do NOT need to do anything if you are running without TLS (i.e. on a laptop)
#
# If set to: https://localhost:8080 as suggested then host validation is disabled; otherwise
# you must set up JAVA TLS host verification with fully signed certificates; typical errors include:
#
# java.security.cert.CertificateException: No name matching a.b.com found
# [This means you need create a correctly signed certificate and add to the keystore]
#
# javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building
# failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification
# path to requested target
# [This means there is a certificate but it is not correctly signed]
#
# You can also typically get meessages that Java cannot find the keystore and/or TLS is not setup
# correctly]
#
# http://java.globinch.com/enterprise-java/security/pkix-path-building-failed-validation-sun-security-validatorexception/
#
# For most purposes; localhost will do fine; as long as Tomcat is setup to run on localhost

# taxonomyServicesServer=http://localhost:8080

#
# RIF services uses Taxonomy services directly a) when creating study JSON from the database using
# "Save completed study" and b) when creating the same file for the export ZIP file.
#
# This is code in `...rapidInquiryFacility\rifServices\src\main\java\rifServices\datastorage\common\GetStudyJSON.java`
#

#
# Printing setup:
#
# Journal requirements:
#
# PlosOne: http://journals.plos.org/plosone/s/figures
#
# Figure File Requirements
# The list below is an abbreviated summary of the figure specifications. Read the full details of the requirements in the corresponding sections on this page.
# File Format:			TIFF or EPS
# Dimensions:			Width: 789 – 2250 pixels (at 300 dpi). Height maximum: 2625 pixels (at 300 dpi).
# Resolution:			300 – 600 dpi
# File Size:			<10 MB
# Text within Figures: 	Arial, Times, or Symbol font only in 8-12 point
# Figure Files: 		Fig1.tif, Fig2.eps, and so on. Match file name to caption label and citation.
# Captions:				In the manuscript, not in the figure file.

# Elsevier: https://www.elsevier.com/authors/author-schemas/artwork-and-media-instructions/artwork-sizing
#
# Number of pixels versus resolution and print size, for bitmap images
# Image resolution, number of pixels and print size are related mathematically: Pixels = Resolution (DPI) × Print size (in inches); 300 DPI for halftone images; 500 DPI for combination art; 1000 DPI for line art. 72 Points in one inch.
# TARGET SIZE                   Image width 	Pixels@300dpi 	Pixels@500dpi 	Pixels@1000dpi
# Minimal size                   30 mm (85 pt)  354 	 		591 			1181
# Single column                  90 mm (255 pt) 1063 			1772 			3543
# 1.5 column 	                140 mm (397 pt) 1654 			2756 			5512
# Double column (full width)    190 mm (539 pt) 2244 			3740 			7480

#
# RIF default setup:
# denominator [population] Pyramid: 1000 dpi, 90mm width
#
# 1000dpi = 39.370079 pixel/mm
# 500dpi  = 16.685039 pixel/mm
# 300dpi  = 11.811024 pixel/mm
#
# 1 inch = 25.4mm
# 1000dpi => pixel/mm = dpi/25.4
#
printingDPI = 1000
denominatorPyramidWidthPixels = 3543
mapWidthPixels = 7480
#
# JPEG quality: betwen 0.75 and 1.0 (no loss)
# Below 0.75 will result is visible artifacts
#
jpegQuality = 0.8
#
# Population pyramid aspect ratio
#
populationPyramidAspactRatio = 1.43

#
# Set this to appropriate text to define Copyright in map images (only GEOTIFF supported at present)
# \u00A9 is the Unicode for the Copyright symbol (C)
#
#copyrightInfo="(C) <enter your name here>"

#
# To disable the map grids
#
# enableMapGrids=false

#
# To enable Coordinate Display
#
# enableCoordinateDisplay=trie

#
# To change to the level of rounding in the results; including quantiles etc.
#
# roundDP=3

##
# Eof
